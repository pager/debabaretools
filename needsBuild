#!/bin/sh

####################
#    Copyright (C) 2007 by Raphael Geissert <atomo64@gmail.com>
#
#    This file is part of DeBaBaReTools
#
#    DeBaBaReTools is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    DeBaBaReTools is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with DeBaBaReTools.  If not, see <http://www.gnu.org/licenses/>.
####################

if [ ! -z "$DEBUG" ] && [ "$DEBUG" ]; then
    set -x
fi

set -e

declare -r APP_NAME="needsBuild"
declare -r APP_VERSION="0.2"

if [ -f "/etc/DeBaBaReTools/common.conf" ]; then
        . /etc/DeBaBaReTools/common.conf
fi

if [ -f "$HOME/.DeBaBaReToolsrc" ]; then
        . "$HOME/.DeBaBaReToolsrc"
fi

if [ -f "/etc/DeBaBaReTools/$APP_NAME.conf" ]; then
	. /etc/DeBaBaReTools/$APP_NAME.conf
fi

if [ -f "$HOME/.${APP_NAME}rc" ]; then
        . "$HOME/.${APP_NAME}rc"
fi

. $BACKEND_DIR/probe.sh

# we first load the settings
probeFile "config"

cd "$BASE_DIR"

# afterwards we load the rest
probeFile "lock" "startup" "codenamesTable" "buildQueue" "setDefault" "verbosity" "repository" "parsers"

setDefault "LOCK_DIR" "$BASE_DIR"
setDefault "VERBOSE" "0"
setDefault "INCOMING" "$BASE_DIR/incoming"
setDefault "ACCEPTED" "$INCOMING/accepted"
setDefault "REPOSITORY" "$BASE_DIR/debian"

lockApplication

getSupportedRepArchs

if verbose; then
	sayHello
	Say "Architectures: ${BUILDARCHS}all"
fi

for CHANGES in $ACCEPTED/*.changes; do
	if [ ! -f $CHANGES ]; then
		continue
	fi

	checkUnlock

	Say "Now processing $CHANGES"

	CHANGES=`basename $CHANGES`

	getChangesEntry "$ACCEPTED/$CHANGES" "Source"
	getChangesEntry "$ACCEPTED/$CHANGES" "Version"
	getChangesEntry "$ACCEPTED/$CHANGES" "Architecture"
	getChangesEntry "$ACCEPTED/$CHANGES" "Distribution"

	S_PACKAGE="${SOURCE}_${VERSION}"

	# retrieve the $CODENAME for $DISTRIBUTION
	# TODO: possibly do this (distro<->codename) via the repository info
	distroToCodename "$DISTRIBUTION"

	for arc in $ARCHITECTURE; do
		if [ [ "$a" == "source" ]; then
			continue
		fi

		if [ "$a" == "all" ] || [ isArchSupportedIn "$arc" "$BUILDARCHS" ]; then
			markAsBuilt "$CODENAME" "$S_PACKAGE" "$arc"
		fi
	done

	## TODO: do not guess the .dsc file always is $ACCEPTED/$S_PACKAGE.dsc; better read from .changes
	## NOTE: $DSC MUST be $S_PACKAGE.dsc for the other scripts to work :(
	DSC="$S_PACKAGE.dsc"

	# if there's no source package go to next .changes
	if [ ! -f "$ACCEPTED/$DSC" ]; then
		continue
	fi

	# $ARCHITECTURE is refreshed from .dsc now
	getDscEntry "$ACCEPTED/$DSC" "Architecture"

	TO_BUILD_IN="$ARCHITECTURE"

	if [ "$TO_BUILD_IN" = "any" ]; then
		TO_BUILD_IN="$BUILDARCHS"
	else
		_TO_BUILD_IN="$TO_BUILD_IN"
		TO_BUILD_IN=
		for a in ${_TO_BUILD_IN}; do
			if [ "$a" == "all" ] || [ isArchSupportedIn "$a" "$BUILDARCHS" ]; then
				TO_BUILD_IN+="$a "
			fi
		done
	fi

	if [ ! -z "$TO_BUILD_IN" ]; then
		setToBuild "$CODENAME" "$S_PACKAGE" "$PACKAGE_V" "$TO_BUILD_IN"
	fi

done

unlockApplication
exit 0

