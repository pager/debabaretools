#!/bin/sh

## TODO: all the other TODOs + find a way to build when source was not uploaded 'cause it's already in rep!!!!
##       ignore packages in failedToBuild.$DISTRO (should be manually removed from that file)

if [ ! -z "$DEBUG" ] && [ "$DEBUG" ]; then
    set -x
fi

set -e

declare -r APP_NAME="needsBuild"
declare -r APP_VERSION="0.2"

if [ -f "/etc/default/DeBaBaReTools" ]; then
        . /etc/default/DeBaBaReTools
fi

if [ -f "$HOME/.DeBaBaReToolsrc" ]; then
        . "$HOME/.DeBaBaReToolsrc"
fi

if [ -f "/etc/default/$APP_NAME" ]; then
	. /etc/default/$APP_NAME
fi

if [ -f "$HOME/.${APP_NAME}rc" ]; then
        . "$HOME/.${APP_NAME}rc"
fi

. $BACKEND_DIR/probe.sh

# we first load the settings
probeFile "config"

cd "$BASE_DIR"

# afterwards we load the rest
probeFile "lock" "startup" "codenamesTable" "buildQueue" "setDefault" "verbosity"

lockApplication

needsBuild_dataDir=build/data

setDefault "VERBOSE" "0"
setDefault "INCOMING" "incoming"
setDefault "ACCEPTED" "incoming/accepted"
setDefault "REPOSITORY" "debian"

t=`cat conf/distributions  | grep Architectures | sort -r -u | awk '-F: ' '{ print $2 }'`

for a in $t; do
    if [ "$a" != "source" ]; then
        BUILDARCHS+="$a "
    fi
done

if verbose; then
	sayHello
	Say "Architectures: ${BUILDARCHS}all"
fi

for CHANGES in $ACCEPTED/*.changes; do
	if [ ! -f $CHANGES ]; then
		continue
	fi

	checkUnlock
	
	verbose "Now processing $CHANGES"

        CHANGES=`basename $CHANGES`

	S_PACKAGE="`echo "$CHANGES" | awk -F_ '{ print $1 }'`_`echo "$CHANGES" | awk -F_ '{ print $2 }'`"

	PACKAGE_V="`echo "$CHANGES" | awk -F_ '{ print $2 }'`"

        CHANGES_ARCH="`echo "$CHANGES" | awk -F_ '{ print $3 }' | awk -F. '{ print $1 }'`"

        TO_BUILD_IN="`cat ${ACCEPTED}/${S_PACKAGE}.dsc | grep Architecture: | awk '-F: ' '{ print $2 }'`"

        DISTRO="`cat ${ACCEPTED}/$CHANGES | grep Distribution: | awk '-F: ' '{ print $2 }'`"

        if [ "${TO_BUILD_IN}" = "any" ]; then
            TO_BUILD_IN=${BUILDARCHS}
        fi

        if [ ! -z "${TO_BUILD_IN}" ]; then
            toBuild "$DISTRO" "$S_PACKAGE" "$PACKAGE_V" "$TO_BUILD_IN"
        fi
done

unlockApplication
exit 0

