#!/bin/sh

####################
#    Copyright (C) 2007 by Raphael Geissert <atomo64@gmail.com>
#
#    This file is part of DeBaBaReTools
#
#    DeBaBaReTools is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    DeBaBaReTools is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with DeBaBaReTools.  If not, see <http://www.gnu.org/licenses/>.
####################

## NOTE: this script is currently broken!
## TODO: find a way to build when the source package is already installed in the repository
## TODO: ignore packages in failedToBuild.$DISTRO (should be manually removed from that file)

if [ ! -z "$DEBUG" ] && [ "$DEBUG" ]; then
    set -x
fi
set -e

declare -r APP_NAME="wannaBuild"
declare -r APP_VERSION="0.1"

if [ -f "/etc/DeBaBaReTools/common.conf" ]; then
        . /etc/DeBaBaReTools/common.conf
fi

if [ -f "$HOME/.DeBaBaReToolsrc" ]; then
        . "$HOME/.DeBaBaReToolsrc"
fi

if [ -f "/etc/DeBaBaReTools/$APP_NAME.conf" ]; then
	. /etc/DeBaBaReTools/$APP_NAME.conf
fi

if [ -f "$HOME/.${APP_NAME}rc" ]; then
        . "$HOME/.${APP_NAME}rc"
fi

. $BACKEND_DIR/probe.sh

# we first load the settings
probeFile "config"

cd "$BASE_DIR"

# afterwards we load the rest
probeFile "lock" "verbosity" "misc" "setDefault" "build"

setDefault "LOCK_DIR" "$BASE_DIR"
setDefault "VERBOSE" "0"
setDefault "BUILD_DIR" "$BASE_DIR/build"
setDefault "BUILD_DATA" "$BUILD_DIR/data"
setDefault "GAINROOT" "sudo"
setDefault "DEB_HOST_ARCH" "`dpkg-architecture -l | grep DEB_HOST_ARCH= | cut '-d=' -f2-`"

getSupportedRepDistros
setDefault "DISTRO_TO_BUILD" "$SUPPORTED_DISTROS"

setLockFiles
lockApplication

if verbose; then
	sayHello
fi

initBuildQueue

for DISTRO in $DISTRO_TO_BUILD; do
	if isDistroSupported "$DISTRO"; then
		true
	else
		continue
	fi

	checkUnlock

	Say "Processing packages to be built for $DISTRO"

	getToBuild "$DISTRO" "$DEB_HOST_ARCH"
	for S_PACKAGE in $TOBUILD; do

		checkUnlock

		Say  "\tProcessing source package $S_PACKAGE"

		# fetchSource "$S_PACKAGE"
		# wannaLock "$S_PACKAGE" "$DEB_HOST_ARCH" "installed"

		if [ ! -f "$ACCEPTED/${S_PACKAGE}.dsc" ]; then
			continue
		fi

		# wannaLock "$S_PACKAGE" "$DEB_HOST_ARCH"

		BUILDOPTS=""
		PBUILDEROPTS=""
		BUILDALL=0

		# Check whether we are building binary-arch or also include indep
		if hasPendingArchAll "$DISTRO" "$S_PACKAGE"; then
			BUILDALL=1
			Say "\t\tAlso going to build 'all'"
		else
			PBUILDEROPTS+=' --binary-arch'
		fi

		# Create a temp dir where the results are going to be placed after building
		# TODO: fix this thing!!! pdebuilder should be called
		RESULTSDIR=`mktemp -d -p $BUILD_DIR/ XXXXXXXXXXX` || exit 1

		Say "\t\tStarting pbuilder --build ${PBUILDEROPTS} --debbuildopts ${BUILDOPTS} --buildresult ${RESULTSDIR} --basetgz ${PBUILDER_CACHE}/${DISTRO}.tgz ${ACCEPTED}/${S_PACKAGE}.dsc"

		#
		# Finally build
		#  pdebuild/pbuilder options must be setup in the pbuilderrc file
		#
		$GAINROOT pbuilder --build ${PBUILDEROPTS} --debbuildopts "${BUILDOPTS}" --buildresult ${RESULTSDIR} --basetgz ${PBUILDER_CACHE}/${DISTRO}.tgz ${ACCEPTED}/${S_PACKAGE}.dsc > $BUILD_DIR/logs/$S_PACKAGE 2> $BUILD_DIR/logs/$S_PACKAGE.error

		#
		# Make sure we got something
		#

		if [ ! -f "${RESULTSDIR}/${S_PACKAGE}_${Arch}.changes" ]; then
			Say "\t\tCould not find ${RESULTSDIR}/${S_PACKAGE}_${Arch}.changes, build failed"

			echo "${PACKAGE_L}" >> $BUILD_DATA/failedToBuild.${DISTRO}
			sed --in-place "s/${PACKAGE_L}//;" $BUILD_DATA/needsBuild.${DISTRO}
			sed --in-place "s/${S_PACKAGE}|all//;" $BUILD_DATA/needsBuild.${DISTRO}
			continue
		fi

		FILES="`cat ${RESULTSDIR}/${S_PACKAGE}_${Arch}.changes | egrep "[0-9a-f]{32} [0-9]+ [a-z]+ [a-z]+ .*\.deb" | sed "s/ /|/g;"`"
		for FEntry in $FILES; do
			if [ -z "$FEntry" ]; then
				continue
			fi

			F="`echo "$FEntry" | awk '-F|' '{ print $6 }'`"

			Say "\t\tInstalling ${RESULTSDIR}/$F in $INCOMING/${DISTRO}/"

			mv ${RESULTSDIR}/$F $INCOMING/${DISTRO}/
		done

		Say "\t\tInstalling ${RESULTSDIR}/${S_PACKAGE}_${Arch}.changes in $INCOMING/${DISTRO}/"

		mv ${RESULTSDIR}/${S_PACKAGE}_${Arch}.changes $INCOMING/${DISTRO}/

		sed --in-place "s/${PACKAGE_L}//;" $BUILD_DATA/needsBuild.${DISTRO}
		sed --in-place "s/${S_PACKAGE}|all//;" $BUILD_DATA/needsBuild.${DISTRO}

		FilesInBuild="`ls ${RESULTSDIR}/*`"
		Say "\t\tCleaning results directory (${RESULTSDIR}):"

		for F in "$FilesInBuild"; do
			F="${RESULTSDIR}/${F}"
			Say "\t\trm -rf $F"
			rm -rf $F
		done
		rm -rf ${RESULTSDIR}

	done
done

shutdownBuildQueue
sayBye
unlockApplication
exit 0
